---
# Source: synmetrix/templates/hasura.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hasura-migrations-config
data:
  config.yaml: |
    version: 2
    endpoint: http://synmetrix-hasura:8080
    metadata_directory: metadata
    seeds_directory: seeds
    actions:
      kind: synchronous
      handler_webhook_baseurl: http://synmetrix-actions:3000 
  migrate.sh: |
    #!/bin/sh
    set -e
    
    # Wait for Hasura to be ready before running migrations.
    echo "Waiting for Hasura to be ready..."
    sleep 10
    until curl -f http://localhost:8080/healthz; do
      echo "Waiting for Hasura to be ready..."
      sleep 2
    done
    
    echo "Hasura is ready - running migrations"
    
    # Run migrations
    cd /hasura-migrations
    echo "Applying database migrations..."
    hasura-cli migrate apply --all-databases --endpoint http://localhost:8080
    
    echo "Applying metadata..."
    hasura-cli metadata apply --endpoint http://localhost:8080
    
    echo "Applying seeds..."
    hasura-cli seed apply -f 1708465495269_demoSeed.sql --endpoint http://localhost:8080
    
    echo "Migrations completed successfully!"
---
# Source: synmetrix/templates/hasura.yaml
apiVersion: v1
kind: Service
metadata:
  name: synmetrix-hasura
  labels:
    app.kubernetes.io/name: synmetrix
    app.kubernetes.io/instance: synmetrix
    app.kubernetes.io/component: graphql
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: synmetrix
    app.kubernetes.io/instance: synmetrix
    app.kubernetes.io/component: graphql

---
# Source: synmetrix/templates/hasura.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synmetrix-hasura
  labels:
    
    app.kubernetes.io/name: synmetrix
    app.kubernetes.io/instance: synmetrix
    app.kubernetes.io/component: graphql
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: synmetrix
      app.kubernetes.io/instance: synmetrix
      app.kubernetes.io/component: graphql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: synmetrix
        app.kubernetes.io/instance: synmetrix
        app.kubernetes.io/component: graphql
    spec:
      serviceAccountName: synmetrix
      containers:
        - name: hasura
          image: quicklookup/synmetrix-hasura:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          lifecycle:
            postStart:
              exec:
                # run migrations as postStart hook, since they require hasura to be up and running.
                command:  
                  - /bin/sh
                  - -c 
                  - |
                    /scripts/migrate.sh >> /proc/1/fd/1
          volumeMounts:
            - name: hasura-migrations-config
              mountPath: /hasura-migrations/config.yaml
              subPath: config.yaml
            - name: hasura-migrations-config
              mountPath: /scripts/migrate.sh
              subPath: migrate.sh
          envFrom:
            - configMapRef:
                name: synmetrix-config
            - secretRef:
                name: synmetrix-secrets
          env:
            - name: ENABLE_TELEMETRY
              value: "false"
            - name: HASURA_GRAPHQL_DEV_MODE
              value: "true"
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "true"
            - name: HASURA_GRAPHQL_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: synmetrix-secrets
                  key: HASURA_GRAPHQL_ADMIN_SECRET
            - name: HASURA_GRAPHQL_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: synmetrix-secrets
                  key: DATABASE_URL

          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
      volumes:
        - name: hasura-migrations-config
          configMap:
            name: hasura-migrations-config
            defaultMode: 0755
    