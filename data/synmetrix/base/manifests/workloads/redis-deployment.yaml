---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synmetrix-redis
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: synmetrix
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: synmetrix
    app.kubernetes.io/version: "7.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: synmetrix
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: synmetrix
        app.kubernetes.io/component: cache
        app.kubernetes.io/part-of: synmetrix
    spec:
      serviceAccountName: synmetrix
      containers:
        - name: redis
          image: "redis:7.0.0"
          imagePullPolicy: IfNotPresent
          args:
            - redis-server
            - --appendonly
            - "yes"
            - --appendfsync
            - everysec
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: synmetrix-redis-pvc