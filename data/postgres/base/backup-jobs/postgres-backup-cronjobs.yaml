---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cxs-pg-backup
  namespace: data
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: data
  name: cxs-pg-backup
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cxs-pg-backup
  namespace: data
subjects:
- kind: ServiceAccount
  name: cxs-pg-backup
  namespace: data
roleRef:
  kind: Role
  name: cxs-pg-backup
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cxs-pg-backup-script
  namespace: data
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    POD_NAME="${PGBACKREST_REPO_POD_NAME:-cxs-pg-repo-host-0}"
    NAMESPACE="${PGBACKREST_REPO_POD_NAMESPACE:-data}"
    BACKUP_TYPE="${1:-diff}"
    
    echo "$(date): Starting pgbackrest ${BACKUP_TYPE} backup..."
    
    if [ "$BACKUP_TYPE" = "full" ]; then
        BACKUP_COMMAND="pgbackrest backup --stanza=db --type=full --log-level-console=detail"
    else
        BACKUP_COMMAND="pgbackrest backup --stanza=db --type=diff --log-level-console=detail"
    fi
    
    echo "Pod: ${POD_NAME}"
    echo "Namespace: ${NAMESPACE}"
    echo "Command: ${BACKUP_COMMAND}"
    
    # Execute backup command - will exit with non-zero code on failure
    kubectl exec -n "${NAMESPACE}" "${POD_NAME}" -- ${BACKUP_COMMAND}
    
    echo "$(date): Backup completed successfully"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cxs-pg-full-backup
  namespace: data
  labels:
    app: cxs-pg-backup
    type: full
spec:
  # Run every Monday at 06:00
  schedule: "0 6 * * 1"
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 3600  # 1 hour timeout
      template:
        metadata:
          labels:
            app: postgres-backup
            type: full
        spec:
          serviceAccountName: cxs-pg-backup
          restartPolicy: OnFailure
          containers:
          - name: backup
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - /scripts/backup.sh
            - full
            env:
            - name: PGBACKREST_REPO_POD_NAME
              value: "cxs-pg-repo-host-0"
            - name: PGBACKREST_REPO_POD_NAMESPACE
              value: "data"
            volumeMounts:
            - name: backup-script
              mountPath: /scripts
              readOnly: true
            resources:
              requests:
                memory: "64Mi"
                cpu: "100m"
              limits:
                memory: "128Mi"
                cpu: "200m"
          volumes:
          - name: backup-script
            configMap:
              name: cxs-pg-backup-script
              defaultMode: 0755
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cxs-pg-diff-backup
  namespace: data
  labels:
    app: cxs-pg-backup
    type: differential
spec:
  # Run Tuesday through Sunday at 06:00
  schedule: "0 6 * * 0,2-6"
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 1800  # 30 minutes timeout
      template:
        metadata:
          labels:
            app: postgres-backup
            type: differential
        spec:
          serviceAccountName: cxs-pg-backup
          restartPolicy: OnFailure
          containers:
          - name: backup
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - /scripts/backup.sh
            - diff
            env:
            - name: PGBACKREST_REPO_POD_NAME
              value: "cxs-pg-repo-host-0"
            - name: PGBACKREST_REPO_POD_NAMESPACE
              value: "data"
            volumeMounts:
            - name: backup-script
              mountPath: /scripts
              readOnly: true
            resources:
              requests:
                memory: "64Mi"
                cpu: "100m"
              limits:
                memory: "128Mi"
                cpu: "200m"
          volumes:
          - name: backup-script
            configMap:
              name: cxs-pg-backup-script
              defaultMode: 0755 